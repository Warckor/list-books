---
name: list-books-helm
nameOverride: ""

frontend:
  name: frontend
  image:
    repository: ghcr.io/warckor/list-books/frontend
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    protocol: TCP
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hostname: frontend.local
    className: ""
    tls: []
    hosts:
      - host: frontend.local
        paths:
          - path: /
            pathType: Prefix
    service:
      name: frontend-service
      port: 80
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  envFrom:
    - configMapRef:
        name: list-books-config
    - secretRef:
        name: list-books-secrets
  env:
    - name: FLASK_ENV
      value: production
  volumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx/conf.d/default.conf
      subPath: nginx.conf
      readOnly: true
  volumes:
    - name: nginx-config
      configMap:
        name: list-books-config

backend:
  name: backend
  image:
    repository: ghcr.io/warckor/list-books/backend
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
    protocol: TCP
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  env:
    - name: DATABASE_URL
      value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB)"
  envFrom:
    - configMapRef:
        name: list-books-config
    - secretRef:
        name: list-books-secrets
  volumeMounts: []
  volumes: []

database:
  name: postgres
  image:
    repository: postgres
    tag: 15
    pullPolicy: IfNotPresent
  replicas: 1
  username: user
  password: pass
  database: mydb
  host: postgres
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  pvc:
    name: postgres-pvc
    storage: 1Gi
    accessModes:
      - ReadWriteOnce
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  env:
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: list-books-secrets
          key: POSTGRES_USER
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: list-books-secrets
          key: POSTGRES_PASSWORD
    - name: POSTGRES_DB
      valueFrom:
        configMapKeyRef:
          name: list-books-config
          key: POSTGRES_DB
  envFrom: []
  volumeMounts:
    - name: postgres-data
      mountPath: /var/lib/postgresql/data
  volumes:
    - name: postgres-data
      persistentVolumeClaim:
        claimName: postgres-pvc

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
affinity: {}
tolerations: {}
